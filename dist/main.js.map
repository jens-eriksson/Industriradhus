{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.css","webpack:///./src/app/app.html","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.ts","webpack:///./src/components/footer/footer.css","webpack:///./src/components/footer/footer.html","webpack:///./src/components/footer/footer.ts","webpack:///./src/components/header/header.css","webpack:///./src/components/header/header.html","webpack:///./src/components/header/header.ts","webpack:///./src/components/image-modal/image-modal.css","webpack:///./src/components/image-modal/image-modal.html","webpack:///./src/components/image-modal/image-modal.ts","webpack:///./src/core/auth-guard.ts","webpack:///./src/core/token-interceptor.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///./src/pages/about/about.css","webpack:///./src/pages/about/about.html","webpack:///./src/pages/about/about.ts","webpack:///./src/pages/floorplans/floorplans.css","webpack:///./src/pages/floorplans/floorplans.html","webpack:///./src/pages/floorplans/floorplans.ts","webpack:///./src/pages/home/home.css","webpack:///./src/pages/home/home.html","webpack:///./src/pages/home/home.ts","webpack:///./src/pages/project/project.css","webpack:///./src/pages/project/project.html","webpack:///./src/pages/project/project.ts","webpack:///./src/pages/sign-in/sign-in.css","webpack:///./src/pages/sign-in/sign-in.html","webpack:///./src/pages/sign-in/sign-in.ts","webpack:///./src/pages/unit/unit.css","webpack:///./src/pages/unit/unit.html","webpack:///./src/pages/unit/unit.ts","webpack:///./src/pipe/truncatepipe.ts","webpack:///./src/providers/auth.ts","webpack:///./src/providers/floorplan.ts","webpack:///./src/providers/project.ts","webpack:///./src/providers/sales-agent.ts","webpack:///./src/providers/unit.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SocialLoginModule, AuthServiceConfig } from \"angularx-social-login\";\n\nimport { Industriradhus } from '../app/app';\nimport { HomePage } from '../pages/home/home';\nimport { ProjectPage } from '../pages/project/project';\nimport { UnitPage } from '../pages/unit/unit';\nimport { AboutPage } from '../pages/about/about';\nimport { SignInPage } from './../pages/sign-in/sign-in';\nimport { FloorplansPage } from '../pages/floorplans/floorplans';\n\nimport { FooterComponent } from '../components/footer/footer';\nimport { HeaderComponent } from './../components/header/header';\nimport { ImageModalComponent } from './../components/image-modal/image-modal';\nimport { AccessGuardService } from './../core/auth-guard';\nimport { SignInInterceptor } from './../core/token-interceptor';\n\nimport { TruncatePipe } from '../pipe/truncatepipe';\n\nimport { AuthProvider, getAuthConfig } from './../providers/auth';\nimport { UnitProvider } from './../providers/unit';\nimport { ProjectProvider } from './../providers/project';\nimport { SalesAgentProvider } from './../providers/sales-agent';\nimport { FloorplanProvider } from './../providers/floorplan';\nimport { TokenInterceptor } from '../core/token-interceptor';\n\n\n\n@NgModule({\n  declarations: [\n    Industriradhus,\n    HomePage,\n    AboutPage,\n    ProjectPage,\n    UnitPage,\n    SignInPage,\n    FloorplansPage,\n    HeaderComponent,\n    FooterComponent,\n    ImageModalComponent,\n    TruncatePipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    SocialLoginModule,\n    RouterModule.forRoot([\n      { path: 'sign-in', component: SignInPage},\n      { path: 'start', component: HomePage, canActivate: [AccessGuardService]},\n      { path: 'kontakt', component: AboutPage },\n      { path: 'losningar', component: FloorplansPage },\n      { path: 'projekt/:id', component: ProjectPage, canActivate: [AccessGuardService]},\n      { path: 'enhet/:id', component: UnitPage, canActivate: [AccessGuardService]},\n      { path: '', redirectTo: 'start', pathMatch: 'full'},\n      { path: '**', redirectTo: 'start', pathMatch: 'full'}\n    ])\n  ],\n  providers: [\n    ProjectProvider, \n    UnitProvider,\n    FloorplanProvider,\n    SalesAgentProvider,\n    AuthProvider,\n    AccessGuardService,\n    {\n      provide: AuthServiceConfig,\n      useFactory: getAuthConfig\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass:TokenInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: SignInInterceptor,\n      multi: true\n    }\n\n  ],\n  bootstrap: [Industriradhus]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthProvider } from '../providers/auth';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.html',\n    styleUrls: ['./app.css']\n})\nexport class Industriradhus implements OnInit {\n    subscription: Subscription;\n\n    constructor(\n        private router: Router,\n        private authProvider: AuthProvider\n    ) {\n        this.authProvider.initilize();\n    }\n\n    ngOnInit() {\n    }\n}\n","module.exports = \".footer{\\n    background-color: rgb(104, 103, 103);\\n    color: gainsboro;\\n}\\n\\n.footer a, a:hover {\\n    color: gainsboro;\\n}\"","module.exports = \"<!-- Footer -->\\n<br><br><br>\\n<footer class=\\\"footer font-small stylish-color-dark pt-4 mt-4\\\">\\n\\n  <!-- Footer Links -->\\n  <div class=\\\"container text-center text-md-left\\\">\\n\\n    <!-- Grid row -->\\n    <div class=\\\"row\\\">\\n\\n      <!-- Grid column -->\\n      <div class=\\\"col-12 text-center\\\">\\n         <!-- Links -->\\n         <img src=\\\"../../assets/img/footer-logo.png\\\" width=\\\"300px\\\" />\\n         <br><br>\\n         <ul class=\\\"footer-links list-unstyled\\\">\\n           <li>\\n             <a [routerLink]=\\\"['/kontakt']\\\">om oss / kontakt</a>\\n           </li>\\n         </ul>\\n        \\n\\n      </div>\\n      <!-- Grid column -->\\n\\n    </div>\\n    <!-- Grid row -->\\n\\n  </div>\\n  <!-- Footer Links -->\\n  <br>\\n</footer>\\n<!-- Footer -->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.html',\n  styleUrls: ['./footer.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \".navbar {\\n    background-color: white;\\n    border-bottom-left-radius: .25rem;\\n    border-bottom-right-radius: .25rem;\\n    border: 1px solid rgba(0,0,0,.125);\\n    border-top: none;\\n    margin-top: 0px;\\n}\\n\\n.photo {\\n    border-radius: 50%;\\n    width: 40px;\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg\\\">\\n  <div class=\\\"container\\\">\\n    <span class=\\\"navbar-brand\\\">\\n      <img src=\\\"../../assets/img/header-logo.png\\\" width=\\\"160px\\\" (click)=\\\"navigateHome()\\\" style=\\\"cursor: pointer;\\\">\\n    </span>\\n \\n      <div class=\\\"dropdown pull-right\\\" *ngIf=\\\"authProvider.isAuthenticated()\\\">\\n          <button class=\\\"btn btn-outline-success dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n            <img class=\\\"photo\\\" [src]=\\\"getPhotoUrl()\\\" />\\n            {{ getName() }}\\n          </button>\\n          <div class=\\\"dropdown-menu dropdown-menu-right text-center\\\" aria-labelledby=\\\"dropdownMenuButton\\\">\\n            <a class=\\\"dropdown-item\\\" href=\\\"#\\\" (click)=\\\"signOut()\\\">Logga ut</a>\\n          </div>\\n        </div>\\n  </div>\\n</nav>\\n<br>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthProvider } from './../../providers/auth';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.html',\n  styleUrls: ['./header.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(\n    public authProvider: AuthProvider,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  signOut() {\n    this.authProvider.signOut().then(() => this.router.navigate([\"sign-in\"]));\n  }\n\n  navigateHome() {\n    this.router.navigate([\"home\"]);\n  }\n\n  getName(): string {\n    if(this.authProvider.isAuthenticated()) {\n      return this.authProvider.currentUser.name;\n    }\n    return \"\";\n  }\n\n  getPhotoUrl() {\n    if(this.authProvider.isAuthenticated()) {\n      return this.authProvider.currentUser.photoUrl;\n    }\n    return \"\";\n  }\n\n}","module.exports = \".modal-lg {\\n    max-width: 1400px;\\n}\"","module.exports = \"<!-- Modal -->\\n<div class=\\\"modal fade\\\" id=\\\"{{ id }}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h5 class=\\\"modal-title\\\">{{ title }}</h5>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <!-- Images -->\\n        <div id=\\\"{{ 'modal-carousel-images-' + id }}\\\" class=\\\"carousel\\\" data-interval=\\\"false\\\">\\n          <div class=\\\"carousel-inner\\\">\\n            <div class=\\\"carousel-item\\\" *ngFor=\\\"let img of images; let isFirst = first\\\" [class.active]=\\\"isFirst\\\">\\n              <img class=\\\"d-block w-100\\\" src=\\\"{{'../../assets/img/' + img.name }}\\\" alt=\\\"\\\">\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"text-center\\\" style=\\\"padding: 5px;\\\">\\n            <a class=\\\"btn btn-outline-secondary btn-round\\\" href=\\\"{{ '#modal-carousel-images-' + id }}\\\" role=\\\"button\\\" data-slide=\\\"prev\\\" style=\\\"margin-right: 5px;\\\"><span class=\\\"fa fa-chevron-left\\\"></span></a>\\n            <a class=\\\"btn btn-outline-secondary btn-round\\\" href=\\\"{{ '#modal-carousel-images-' + id }}\\\" role=\\\"button\\\" data-slide=\\\"next\\\"><span class=\\\"fa fa-chevron-right\\\"></span></a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-image-modal',\n  templateUrl: './image-modal.html',\n  styleUrls: ['./image-modal.css']\n})\nexport class ImageModalComponent implements OnInit {\n\n  constructor() { }\n  @Input() images;\n  @Input() id;\n  @Input() title = \"\";\n\n  ngOnInit() {\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { AuthProvider } from '../providers/auth';\n\n@Injectable()\nexport class AccessGuardService implements CanActivate {\n    \n    constructor(\n        public authProvider: AuthProvider,\n        public router: Router\n    ) { }\n    canActivate(route: ActivatedRouteSnapshot): boolean {\n        let authenticated = this.authProvider.isAuthenticated();\n        let authorized = this.authProvider.isAuthorized();\n\n        if (authenticated && authorized) {\n            return true;\n        }\n        else {\n            this.router.navigate(['sign-in']);\n            return false;\n        }\n    }\n\n    \n}","import { AuthProvider } from './../providers/auth';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpResponse,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport 'rxjs/add/operator/do';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n  constructor(public authProvider: AuthProvider) { }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    if (this.authProvider.currentUser) {\n      request = request.clone({\n        setHeaders: {\n          Authorization: \"Bearer \" + this.authProvider.currentUser[\"jwt\"]\n        }\n      });\n    }\n\n    return next.handle(request);\n  }\n}\n\n@Injectable()\nexport class SignInInterceptor implements HttpInterceptor {\n  constructor(public authProvider: AuthProvider, private router: Router) { }\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n\n    return next.handle(request).do((event: HttpEvent<any>) => {\n      if (event instanceof HttpResponse) {\n        // do stuff with response if you want\n      }\n    }, (err: any) => {\n      if (err instanceof HttpErrorResponse) {\n        if (err.status === 401) {\n          this.router.navigate([\"sign-in\"]);\n        }\n      }\n    });\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBaseUrl: 'http://localhost:1337/' \n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","module.exports = \".card {\\n    margin-bottom: 20px;\\n}\\n\\n.max-height {\\n    height: calc(100% - 20px);\\n}\"","module.exports = \"<div class=\\\"container\\\" style=\\\"min-height: 100%;\\\">\\n  <app-header></app-header>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-9\\\">\\n      <div class=\\\"card max-height\\\">\\n\\n        <div class=\\\"card-body\\\">\\n          <h3>Nordiska Industriradhus AB<br>\\n            <small class=\\\"text-muted\\\">Vi är en projektutvecklare av industriradhus.</small>\\n          </h3>\\n          <br>\\n          <p>\\n            Vårt verksamheten är fokuserad på nyproduktion av industriradhus på etablerade industriområden i norra Sverige.\\n          </p>\\n          <p>\\n            Vårt arbete ska bidra till att skapa väl fungerande industrikluster för dagens och morgondagens företagare. Med hållbart\\n            samhällsbyggande avser vi stärka de orter vi investerar i.\\n          </p>\\n          <br>\\n          <h3>Pågående projekt</h3>\\n          <div class=\\\"row\\\">\\n          <div class=\\\"card\\\" *ngFor=\\\"let project of projects\\\" style=\\\"margin-bottom: 20px; width: 11rem; margin:10px;\\\">\\n              <div class=\\\"card-body\\\">\\n                <h5 class=\\\"card-title\\\">{{ project.city }}</h5>\\n                <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{ project.name }}</h6>\\n                <hr>\\n                <p class=\\\"card-text\\\">\\n                  <b>Försäljningsstart</b>\\n                  <br>{{ project.salesLaunch }}</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n        <div class=\\\"card\\\" *ngIf=\\\"contact\\\">\\n            <img class=\\\"card-img-top\\\" src=\\\"{{ '../assets/img/' + contact.photo.name }}\\\" alt=\\\"Kontaktperson\\\">\\n    \\n            <div class=\\\"card-body\\\" align=\\\"center\\\">\\n    \\n              <p class=\\\"card-text\\\"><b>{{ contact.name }}</b></p>\\n              <p class=\\\"card-text\\\">{{ contact.phone }}</p>\\n              <p class=\\\"card-text\\\"><a href=\\\"{{ 'mailto:' + contact.email }}\\\">{{ contact.email | truncate}}</a></p>\\n            </div>\\n          </div>\\n    </div>\\n  </div>c\\n</div>\\n<br><br><br><br><br><br>\\n<app-footer></app-footer>\"","import { SalesAgentProvider } from './../../providers/sales-agent';\nimport { Component, OnInit } from '@angular/core';\nimport { ProjectProvider } from '../../providers/project';\n\n@Component({ \n  selector: 'app-about',\n  templateUrl: './about.html',\n  styleUrls: ['./about.css']\n})\nexport class AboutPage implements OnInit {\n  contact;\n  projects;\n\n  constructor(\n    private salesAgentProvider: SalesAgentProvider,\n    private projectProvider: ProjectProvider\n  ) { \n    this.salesAgentProvider.getSalesAgent(\"jorgen\").subscribe(salesAgent => {\n      this.contact = salesAgent;\n    });\n    this.projectProvider.getProjects().subscribe(projects => {\n      this.projects = projects;\n    })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".card {\\n    margin-bottom: 20px;\\n}\\n\\n.max-height {\\n    height: calc(100% - 20px);\\n}\\n\\n.nav-link {\\n    border-bottom: 2px solid white;\\n    text-transform: uppercase;\\n}\\n\\n.nav-link.active {\\n    border-bottom: 2px solid green;\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-header></app-header>\\n  <div class=\\\"row\\\" *ngIf=\\\"floorplans\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card max-height\\\">\\n\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"card-title\\\">\\n            <h1>Flexibla lösningar</h1>\\n          </div>\\n          <ul class=\\\"nav justify-content-center\\\" id=\\\"tabs\\\" role=\\\"tablist\\\">\\n            <li class=\\\"nav-item\\\" *ngFor=\\\"let floorplan of floorplans; let isFirst = first\\\">\\n              <a class=\\\"nav-link\\\" [class.active]=\\\"isFirst\\\" id=\\\"{{ floorplan.key + '-tab' }}\\\" data-toggle=\\\"tab\\\" href=\\\"{{ '#' + floorplan.key }}\\\"\\n                role=\\\"tab\\\">{{ floorplan.name }}</a>\\n            </li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n\\n  <div class=\\\"tab-content\\\" id=\\\"tab-content\\\">\\n    <div class=\\\"tab-pane fade show\\\" id=\\\"{{ floorplan.key }}\\\" role=\\\"tabpanel\\\" *ngFor=\\\"let floorplan of floorplans; let isFirst = first\\\"\\n      [class.active]=\\\"isFirst\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-9\\\">\\n          <div class=\\\"card max-height\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">{{ floorplan.name }}</h5>\\n              <hr>\\n\\n              <div id=\\\"{{ 'carousel-images-' + floorplan.key }}\\\" class=\\\"carousel\\\" data-interval=\\\"false\\\" style=\\\"margin: 30px -20px 0px -20px;\\\">\\n                <div class=\\\"carousel-inner\\\">\\n                  <div class=\\\"carousel-item\\\" *ngFor=\\\"let img of floorplan.images; let isFirst = first\\\" [class.active]=\\\"isFirst\\\">\\n                    <img class=\\\"d-block w-100\\\" src=\\\"{{ '../../assets/img/' + img.name }}\\\" alt=\\\"\\\" data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#modal-images-' + floorplan.key\\\">                    \\n                  </div>\\n                </div>\\n                <a class=\\\"carousel-control-prev\\\" href=\\\"{{ '#carousel-images-' + floorplan.key }}\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\n                  <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Previous</span>\\n                </a>\\n                <a class=\\\"carousel-control-next\\\" href=\\\"{{ '#carousel-images-' + floorplan.key }}\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\n                  <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\n                  <span class=\\\"sr-only\\\">Next</span>\\n                </a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-3\\\">\\n          <div class=\\\"card max-height\\\">\\n            <div class=\\\"card-body\\\">\\n              <h5 class=\\\"card-title\\\">Fakta</h5>\\n              <hr>\\n              <p class=\\\"card-text\\\" *ngFor=\\\"let feature of floorplan.features\\\">\\n                <b>{{ feature.name }}</b>\\n                <br>{{ feature.value }}\\n              </p>\\n            </div>\\n\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\\n<app-image-modal *ngFor=\\\"let floorplan of floorplans\\\" [images]=\\\"floorplan.images\\\" [id]=\\\"'modal-images-' + floorplan.key\\\" [title]=\\\"floorplan.name\\\"></app-image-modal>\"","import { FloorplanProvider } from './../../providers/floorplan';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({ \n  selector: 'app-floorplans',\n  templateUrl: './floorplans.html',\n  styleUrls: ['./floorplans.css']\n})\nexport class FloorplansPage implements OnInit {\n  floorplans;\n\n  constructor(\n    private floorplanProvider: FloorplanProvider\n  ) { \n    this.floorplanProvider.getFloorplans().subscribe(floorplans => {\n      this.floorplans = floorplans;\n    })\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".card {\\n    margin-bottom: 20px;\\n}\\n\\n.max-height {\\n    height: calc(100% - 20px);\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-header></app-header>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\" *ngFor=\\\"let project of projects\\\">\\n      <div class=\\\"card\\\" *ngIf=\\\"project.active\\\" style=\\\"margin-bottom: 20px;\\\">\\n        <img src=\\\"{{ '../../assets/img/' + project.images[0].name }}\\\" class=\\\"card-img-top\\\">\\n        <div class=\\\"card-body\\\">\\n          <h3 class=\\\"card-title\\\">{{ project.name }}</h3>\\n          <h6 class=\\\"card-subtitle mb-2 text-muted\\\">{{ project.city }}</h6>\\n          <hr>\\n          <p class=\\\"card-text\\\">\\n            <b>Försäljningsstart</b>\\n            <br>{{ project.salesLaunch }}</p>\\n          <a *ngIf=\\\"project.active\\\" [routerLink]=\\\"['/projekt', project.key]\\\" class=\\\"btn btn-outline-success\\\">Läs mer...</a>\\n          <a *ngIf=\\\"!project.active\\\" [routerLink]=\\\"['/kontakt']\\\" class=\\\"btn btn-outline-success\\\">Kontakt...</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card max-height\\\">\\n\\n        <div class=\\\"card-body\\\">\\n          <h3>Vad är industriradhus?</h3>\\n          <p>\\n            Industriradhus är en ny typ av lösning för små och medelstora företag som vill äga sina egna lokaler men som på egen hand\\n            inte vill investera i uppförandet av en industribyggnad. Istället kan ett kluster av företag gå samman och bygga\\n            en större lokal med enheter som upplåts som bostadsrätter.\\n          </p>\\n          <p>\\n            Att investera i sin egen lokal ger dig som företagare möjlighet att placera överskott och följa med fastighetsmarknaden samtidigt\\n            som man driver sin egen verksamhet. Man sänker också månadskostnaden rejält jämfört med att hyra en liknande\\n            lokal.\\n          </p>\\n          <p>\\n            I avgiften ingår fastighetsskötsel och löpande underhåll t ex snöröjning. Föreningen har även fastigheten fullvärdesförsäkrad,\\n            vilket innebär att försäkringskostnaden för den enskilde lokalinnehavaren blir lägre. Bostadsrättsföreningen\\n            borgar för ett långsiktigt tryggt ägande.\\n          </p>\\n\\n          <h3>Flexibla lösningar</h3>\\n          <p>\\n            Vi jobbar med ett flexibelt modulsystem där du som företagare kan anpasssa din lokal efter era behov. Ni bestämmer er för\\n            hur många fack ni behöver i byggnaden och kan sedan inreda dem som ni vill.\\n\\n          </p>\\n          <p>\\n            Vi kan skapa rena lagringsytor, verkstäder med kontorsdel eller butikslokaler. Möjligheterna är många och det är era behov\\n            som avgör.\\n          </p>\\n          <p>\\n            <a [routerLink]=\\\"['/losningar']\\\" class=\\\"btn btn-outline-success\\\">Läs mer...</a>\\n          </p>\\n          <img src=\\\"../../assets/img/flexibla-losningar.png\\\" width=\\\"100%\\\" />\\n\\n\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h4>Kommande projekt</h4>\\n          <div *ngFor=\\\"let project of projects\\\">\\n            <div *ngIf=\\\"!project.active\\\" style=\\\"margin-bottom: 20px;\\\">\\n              <h5>{{ project.name }}</h5>\\n              <h6 class=\\\"mb-2 text-muted\\\">{{ project.city }}</h6>\\n              <hr>\\n              <p>\\n                <b>Försäljningsstart</b>\\n                <br>{{ project.salesLaunch }}</p>\\n              <a *ngIf=\\\"project.active\\\" [routerLink]=\\\"['/projekt', project.key]\\\" class=\\\"btn btn-outline-success\\\">Läs mer...</a>\\n              <a *ngIf=\\\"!project.active\\\" [routerLink]=\\\"['/kontakt']\\\" class=\\\"btn btn-outline-success\\\">Kontakt...</a>\\n            </div>\\n            <br>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n\\n  </div>\\n</div>\\n<app-footer></app-footer>\"","import { Component, OnInit } from '@angular/core';\nimport { ProjectProvider } from '../../providers/project';\n\n\n@Component({ \n  selector: 'app-home',\n  templateUrl: './home.html',\n  styleUrls: ['./home.css']\n})\nexport class HomePage implements OnInit {  \n  public projects;\n\n  constructor(\n    private projectProvider: ProjectProvider\n  ) {\n    this.projectProvider.getProjects().subscribe(projects => {\n      this.projects = projects;\n    })\n  }\n  \n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \".card {\\n    margin-bottom: 20px;\\n}\\n\\n.max-height {\\n    height: calc(100% - 20px);\\n}\\n\\n.sold {\\n    text-decoration: line-through;\\n    background-color: rgb(241, 241, 241);\\n}\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"project\\\">\\n  <app-header></app-header>\\n\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"card\\\">\\n  \\n          <div id=\\\"carousel-images\\\" class=\\\"carousel\\\" data-interval=\\\"false\\\">\\n            <div class=\\\"carousel-inner\\\">\\n              <div class=\\\"carousel-item\\\" *ngFor=\\\"let img of project.images; let isFirst = first\\\" [class.active]=\\\"isFirst\\\">\\n                <img class=\\\"d-block w-100\\\" src=\\\"{{'../../assets/img/' + img.name}}\\\" data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#modal-images-' + project.key\\\" />\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"text-center\\\" style=\\\"padding: 5px;\\\">\\n              <a class=\\\"btn btn-outline-secondary btn-round\\\" href=\\\"#carousel-images\\\" role=\\\"button\\\" data-slide=\\\"prev\\\" style=\\\"margin-right: 5px;\\\"><span class=\\\"fa fa-chevron-left\\\"></span></a>\\n              <a class=\\\"btn btn-outline-secondary btn-round\\\" href=\\\"#carousel-images\\\" role=\\\"button\\\" data-slide=\\\"next\\\"><span class=\\\"fa fa-chevron-right\\\"></span></a>\\n          </div>\\n        </div>\\n        \\n      </div>\\n    </div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-8\\\">\\n      <div class=\\\"card max-height\\\">\\n        <div class=\\\"card-body\\\">\\n          <h1 class=\\\"card-title\\\">{{ project.name }}</h1>\\n          <span [innerHtml]=\\\"project.description\\\"></span>\\n          <a class=\\\"btn btn-outline-success\\\" [routerLink]=\\\"['/kontakt']\\\">Kontakt...</a>\\n        </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n      <div class=\\\"card max-height\\\">\\n        <div class=\\\"card-body\\\">\\n          <p class=\\\"card-text\\\" *ngFor=\\\"let info of project.summary\\\">\\n            <b>{{ info.name }}</b>\\n            <br>{{ info.value }}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" *ngIf=\\\"units\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h3>Till salu</h3>\\n          <table class=\\\"table\\\">\\n            <thead>\\n              <tr>\\n                <th scope=\\\"col\\\"></th>\\n                <th scope=\\\"col\\\">kvm</th>\\n                <th scope=\\\"col\\\">pris</th>\\n                <th scope=\\\"col\\\">avgift</th>\\n                <th scope=\\\"col\\\"></th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor='let unit of units' [ngClass]=\\\"{'sold':unit.sold}\\\">\\n                <th><a [routerLink]=\\\"['/enhet', unit.key]\\\" [ngClass]=\\\"{'disabled':unit.sold}\\\">{{ unit.name }}</a></th>\\n                <td> {{ unit.size }}</td>\\n                <td>{{ unit.price | currency:'SEK':'':'1.0-0' }} kr</td>\\n                <td>{{ unit.rent | currency:'SEK':'':'1.0-0' }} kr/mån</td>\\n                <td><span class=\\\"text-danger\\\" *ngIf='unit.sold'>SÅLD</span></td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  \\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"card\\\">\\n        <iframe src=\\\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1702.582084811809!2d21.02675231660073!3d64.7415872728741!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x0%3A0x0!2zNjTCsDQ0JzI5LjciTiAyMcKwMDEnNDQuMiJF!5e0!3m2!1ssv!2sse!4v1527750055465\\\"\\n          height=\\\"450\\\" frameborder=\\\"0\\\" style=\\\"border:0\\\" allowfullscreen></iframe>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\\n\\n<app-image-modal [images]=\\\"project.images\\\" [id]=\\\"'modal-images-' + project.key\\\" [title]=\\\"project.name\\\" *ngIf=\\\"project\\\"></app-image-modal>\"","import { ProjectProvider } from './../../providers/project';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.html',\n  styleUrls: ['./project.css']\n})\nexport class ProjectPage implements OnInit {\n\n  project;\n  units;\n\n  constructor(\n    private route: ActivatedRoute,\n    private projectProvider: ProjectProvider\n  ) {\n\n  }\n\n  ngOnInit() {\n    let projectKey = this.route.snapshot.paramMap.get(\"id\");\n    this.projectProvider.getProject(projectKey).subscribe(project => {\n      this.project = project;\n    });\n    this.projectProvider.getUnits(projectKey).subscribe(units => {\n      this.units = units;\n    });\n  }\n}\n","module.exports = \".google {\\n    background: #c32f10; \\n    color: white;\\n    min-width: 160px;\\n    margin: 10px;\\n}\\n\\n.facebook {\\n    background: #3b5998; \\n    color: white;\\n    min-width: 160px;\\n    margin: 10px;\\n}\"","module.exports = \"<div class=\\\"container\\\" style=\\\"margin-top: 100px; max-width: 600px;\\\">\\n\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n              <img src=\\\"../../assets/img/sign-in-logo.png\\\" style=\\\"width: 100%; max-width: 300px;\\\">\\n              <br><br><br>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12 text-center\\\">\\n              <p class=\\\"lead text-muted\\\">Logga in med</p>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2\\\"></div>\\n            <div class=\\\"col-md-4 text-center\\\">\\n              <button class=\\\"btn btn-lg facebook\\\" (click)=\\\"signInWithFacebook()\\\">\\n                <span class=\\\"fab fa-facebook-f fa-lg\\\"></span>\\n                <span style=\\\"margin-left: 20px;\\\">Facebook</span>\\n        \\n              </button>\\n        \\n            </div>\\n            <div class=\\\"col-md-4 text-center\\\">\\n              <button class=\\\"btn btn-lg google\\\" (click)=\\\"signInWithGoogle()\\\">\\n                <span class=\\\"fab fa-google fa-lg \\\"></span>\\n                <span style=\\\"margin-left: 20px; \\\">Google</span>\\n              </button>\\n            </div>\\n            <div class=\\\"col-md-2\\\"></div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col text-center\\\">\\n              <br><br>\\n              <a [routerLink]=\\\"['/kontakt']\\\">om oss / kontakt</a>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\" *ngIf=\\\"message\\\">\\n            <div class=\\\"col text-center\\\">\\n                <br>\\n              <p class=\\\"text-danger\\\" style=\\\"margin: 30px;\\\">\\n                {{ message }}\\n              </p>\\n            </div>\\n          </div>\\n    </div>\\n\\n  </div>\\n\\n</div>\"","import { AuthProvider } from './../../providers/auth';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.html',\n  styleUrls: ['./sign-in.css']\n})\nexport class SignInPage implements OnInit {\n\n  message: string;\n\n  constructor(\n    private authProvider: AuthProvider,\n    private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    console.log(\"SignInPage onInit\");\n  }\n\n  signInWithGoogle() {\n    this.authProvider.signInWithGoogle().then(user => {\n      if (this.authProvider.isAuthorized()) {\n        this.router.navigate([\"home\"]);\n      }\n      else {\n        console.log(\"signInWithGoogle faild\");\n        this.authProvider.signOut();\n        this.message = \"Sorry. Du har inga rättighet\";\n      }\n    });\n  }\n\n  signInWithFacebook() {\n    this.authProvider.signInWithFacebook().then(user => {\n      if (this.authProvider.isAuthorized()) {\n        this.router.navigate([\"home\"]);\n      }\n      else {\n        this.authProvider.signOut();\n        this.message = \"Sorry. Du har inga rättigheter\";\n      }\n    });\n  }\n\n  navToAbout() {\n    this.router.navigate([\"about\"]);\n  }\n}\n","module.exports = \".card {\\n    margin-bottom: 20px;\\n}\\n.sold {\\n    color: red;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"unit && project\\\">\\n  <app-header></app-header>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-9\\\">\\n        <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n              <h1 class=\\\"card-title\\\">{{ unit.name }}</h1>\\n              <a *ngIf=\\\"project\\\" [routerLink]=\\\"['/projekt', project.key]\\\"><h5 class=\\\"card-title\\\">{{ project.name }}</h5></a>\\n              <p [innerHtml]=\\\"unit.description\\\"></p>\\n              <h5 *ngIf=\\\"unit.sold\\\" class=\\\"sold pull-right\\\">SÅLD</h5>\\n          </div>\\n            <div id=\\\"carousel-images\\\" class=\\\"carousel\\\" data-interval=\\\"false\\\">\\n              <div class=\\\"carousel-inner\\\">\\n                <div class=\\\"carousel-item\\\" *ngFor=\\\"let img of unit.images; let isFirst = first\\\" [class.active]=\\\"isFirst\\\">\\n                  <img class=\\\"d-block w-100\\\" src=\\\"{{'../../assets/img/' + img.name }}\\\" alt=\\\"\\\" data-toggle=\\\"modal\\\" [attr.data-target]=\\\"'#modal-images-' + unit.key\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"text-center\\\" style=\\\"padding: 5px;\\\">\\n                <a class=\\\"btn btn-outline-secondary btn-round\\\" href=\\\"#carousel-images\\\" role=\\\"button\\\" data-slide=\\\"prev\\\" style=\\\"margin-right: 5px;\\\"><span class=\\\"fa fa-chevron-left\\\"></span></a>\\n                <a class=\\\"btn btn-outline-secondary btn-round\\\" href=\\\"#carousel-images\\\" role=\\\"button\\\" data-slide=\\\"next\\\"><span class=\\\"fa fa-chevron-right\\\"></span></a>\\n            </div>\\n            <br>\\n    \\n          </div>\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <div *ngFor='let featureCategory of unit.featureCategories'>\\n            <h3>{{featureCategory.name}}</h3>\\n            <hr>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\" *ngFor='let feature of featureCategory.features'>\\n                <h5>{{ feature.name }}</h5>\\n                <p>{{ feature.value }}</p>\\n              </div>\\n            </div>\\n            <br>\\n          </div>\\n        </div>\\n      </div>\\n      \\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Faktaruta</h5>\\n          <table class=\\\"table table-borderless table-sm\\\">\\n            <tr>\\n              <th>Pris</th>\\n              <td>{{ unit.price | currency:'SEK':'':'1.0-0' }} kr</td>\\n            </tr>\\n            <tr>\\n              <th>Avgift</th>\\n              <td>{{ unit.rent | currency:'SEK':'':'1.0-0' }} kr</td>\\n            </tr>\\n            <tr>\\n              <th>Storlek</th>\\n              <td>{{ unit.size | currency:'SEK':'':'1.0-0' }} kvm</td>\\n            </tr>\\n\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"card\\\" *ngIf=\\\"salesAgent\\\">\\n        <h5 class=\\\"card-body\\\">Kontaktperson</h5>\\n        <img class=\\\"card-img-top\\\" src=\\\"{{ '../assets/img/' + salesAgent.photo.name }}\\\" alt=\\\"Kontaktperson\\\">\\n\\n        <div class=\\\"card-body\\\" align=\\\"center\\\">\\n\\n          <p class=\\\"card-text\\\"><b>{{ salesAgent.name }}</b></p>\\n          <p class=\\\"card-text\\\">{{ salesAgent.phone }}</p>\\n          <p class=\\\"card-text\\\"><a href=\\\"{{ 'mailto:' + salesAgent.email }}\\\">{{ salesAgent.email | truncate}}</a></p>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"card\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Dokument</h5>\\n            <ul style=\\\"list-style-type: none; padding: 0;\\\">\\n              <li><a href=\\\"../../assets/doc/stadgar-brf.pdf\\\" target=\\\"_blank\\\"><span class=\\\"far fa-file-pdf\\\"></span> Stadgar BRF</a></li>\\n              <li><a><span class=\\\"far fa-file-pdf\\\"></span> Förhandsavtal</a></li>\\n            </ul>\\n          </div>\\n        </div>\\n\\n    </div>\\n  </div>\\n\\n</div>\\n<app-footer></app-footer>\\n\\n<app-image-modal *ngIf=\\\"unit && project\\\" [images]=\\\"unit.images\\\" [id]=\\\"'modal-images-' + unit.key\\\" [title]=\\\"unit.name\\\"></app-image-modal>\"","import { SalesAgentProvider } from './../../providers/sales-agent';\nimport { UnitProvider } from './../../providers/unit';\nimport { ProjectProvider } from './../../providers/project';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute} from '@angular/router';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-unit',\n  templateUrl: './unit.html',\n  styleUrls: ['./unit.css']\n})\nexport class UnitPage implements OnInit {\n  project;\n  unit;\n  salesAgent;\n  \n  constructor(\n    private route: ActivatedRoute,\n    private unitProvider: UnitProvider,\n    private salesAgentProvider: SalesAgentProvider,\n    private projectProvider: ProjectProvider\n  ) {\n    let unitId = this.route.snapshot.paramMap.get(\"id\");\n    this.unitProvider.getUnit(unitId).subscribe(unit => {\n      this.unit = unit;\n      this.projectProvider.getProject(unit.projectKey).subscribe(project => {\n        this.project = project;\n      });\n      this.salesAgentProvider.getSalesAgent(unit.salesAgentKey).subscribe(salesAgent => {\n        this.salesAgent = salesAgent;\n      })\n    });\n  }\n\n  ngOnInit() {  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'truncate'\n})\nexport class TruncatePipe implements PipeTransform {\n  transform(value: string, limit = 20, completeWords = false, ellipsis = '...') {\n    if (completeWords) {\n      limit = value.substr(0, 13).lastIndexOf(' ');\n    }\n    return `${value.substr(0, limit)}${ellipsis}`;\n  }\n}\n","import { environment } from './../environments/environment';\nimport { Injectable } from '@angular/core';\nimport { AuthService, FacebookLoginProvider, GoogleLoginProvider, SocialUser, AuthServiceConfig, LoginOpt } from \"angularx-social-login\";\nimport { HttpClient } from '@angular/common/http';\n\nlet config = new AuthServiceConfig([\n    {\n        id: GoogleLoginProvider.PROVIDER_ID,\n        provider: new GoogleLoginProvider(\"289317418030-6ti4l95qesg9s2qnpvm9ohmu5kofntkp.apps.googleusercontent.com\")\n    },\n    {\n        id: FacebookLoginProvider.PROVIDER_ID,\n        provider: new FacebookLoginProvider(\"247230532636474\")\n    }\n]);\n\nconst fbLoginOptions: LoginOpt = {\n    scope: 'pages_messaging,pages_messaging_subscriptions,email,pages_show_list,manage_pages',\n    return_scopes: true,\n    enable_profile_selector: true\n  }; // https://developers.facebook.com/docs/reference/javascript/FB.login/v2.11\n   \n  const googleLoginOptions: LoginOpt = {\n    scope: 'profile email'\n  }; // https://developers.google.com/api-client-library/javascript/reference/referencedocs#gapiauth2clientconfig\n \n\n@Injectable()\nexport class AuthProvider {\n    public currentUser: SocialUser;\n\n    constructor(\n        private authService: AuthService,\n        private httpClient: HttpClient\n    ) {\n    }\n\n    initilize() {\n        this.currentUser = JSON.parse(localStorage.getItem(\"currentUser\"));\n    }\n\n    async signInWithGoogle(): Promise<SocialUser> {\n        this.currentUser = await this.authService.signIn(GoogleLoginProvider.PROVIDER_ID, googleLoginOptions);\n        let path = \"auth/google?id_token=\" + this.currentUser.idToken;\n        try {\n            let jwt = await this.httpClient.get<string>(environment.apiBaseUrl + path).toPromise();\n            this.currentUser[\"jwt\"] = jwt;\n        }\n        catch(err) {\n            if(this.currentUser) {\n                this.currentUser[\"jwt\"] = null;\n            }\n            \n            console.error(err);\n        }\n        \n        localStorage.setItem(\"currentUser\", JSON.stringify(this.currentUser));\n        return this.currentUser;\n    }\n\n    async signInWithFacebook(): Promise<SocialUser> {\n        this.currentUser = await this.authService.signIn(FacebookLoginProvider.PROVIDER_ID, fbLoginOptions);\n        let path = \"auth/facebook?access_token=\" + this.currentUser.authToken;\n        try {\n            let jwt = await this.httpClient.get<string>(environment.apiBaseUrl + path).toPromise();\n            this.currentUser[\"jwt\"] = jwt;\n        }\n        catch(err){\n            if(this.currentUser) {\n                this.currentUser[\"jwt\"] = null;\n            }\n            console.error(err);\n        }\n        \n        localStorage.setItem(\"currentUser\", JSON.stringify(this.currentUser));\n        return this.currentUser;\n    }\n\n    async signOut() {\n        localStorage.removeItem(\"currentUser\");\n        this.currentUser = null;\n        await this.authService.signOut();\n        console.log(\"Signed out\");\n    }\n\n    isAuthenticated(): boolean {\n        if (this.currentUser) {\n            return true;\n        }\n\n        return false;\n    }\n\n    isAuthorized() {\n        if(this.currentUser && this.currentUser[\"jwt\"]) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}\n\nexport function getAuthConfig() {\n    return config;\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class FloorplanProvider {\n    private _path = 'floorplans/';\n\n    constructor(private _httpClient: HttpClient) { }\n  \n    getFloorplans(): Observable<any> {\n      return this._httpClient.get(environment.apiBaseUrl + this._path);\n    }\n  \n    getFloorplan(key: string): Observable<any> {\n      return this._httpClient.get(environment.apiBaseUrl + this._path + key);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class ProjectProvider {\n    private path = 'projects/';\n\n    constructor(private httpClient: HttpClient) { }\n\n    getProjects(): Observable<any> {\n        return this.httpClient.get(environment.apiBaseUrl + this.path);\n    }\n\n    getProject(key: string): Observable<any> {\n        return this.httpClient.get(environment.apiBaseUrl + this.path + key);\n    }\n\n    getUnits(key: string): Observable<any> {\n        return this.httpClient.get(environment.apiBaseUrl + this.path + key + \"/units\"); \n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class SalesAgentProvider {\n    private _path = 'sales-agents/';\n\n    constructor(private _httpClient: HttpClient) { }\n  \n    getSalesAgents(): Observable<any> {\n      return this._httpClient.get(environment.apiBaseUrl + this._path);\n    }\n  \n    getSalesAgent(key: string): Observable<any> {\n      return this._httpClient.get(environment.apiBaseUrl + this._path + key);\n    }\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment';\n\n@Injectable()\nexport class UnitProvider {\n    private _path = 'units/';\n\n    constructor(private _httpClient: HttpClient) { }\n  \n    getUnits(): Observable<any> {\n      return this._httpClient.get(environment.apiBaseUrl + this._path);\n    }\n  \n    getUnit(key: string): Observable<any> {\n      return this._httpClient.get(environment.apiBaseUrl + this._path + key);\n    }\n}"],"sourceRoot":""}